class Solution {
    public static void reverse(char A[], int l, int h){
        if (l < h){
          char ch = A[l];
          A[l] = A[h];
          A[h] = ch;
          reverse(A, l + 1, h - 1);
        }
    }
   
    public static String reverseParentheses(String str){
      int len= str.length();
        Stack<Integer> st = new Stack<Integer>();
        for (int i = 0; i < len; i++){

          if (str.charAt(i) == '(')

            st.push(i);
          else if (str.charAt(i) == ')'){
            char[] A = str.toCharArray();
            reverse(A, st.peek() + 1, i);
            str = String.copyValueOf(A);
            st.pop();
          }
    }
     
    String res = "";
    for (int i = 0; i < len; i++)
      if (str.charAt(i) != ')' && str.charAt(i) != '(')
        res += (str.charAt(i));
      
    return res;
  }
 
}
